version: '2'

services:
  puppet:
    container_name: puppet
    hostname: puppet
    image: puppet/puppetserver
    ports:
      - 8140:8140
    volumes:
      - ./code:/etc/puppetlabs/code/
      - ./puppet/ssl:/etc/puppetlabs/puppet/ssl/
      - ./hiera.yaml:/etc/puppetlabs/puppet/hiera.yaml
      - ./fileserver.conf:/etc/puppetlabs/puppet/fileserver.conf
      - ./files:/etc/puppetlabs/puppet/files
      - ./r10k:/etc/puppetlabs/r10k
      - ./secure:/etc/puppetlabs/puppet/secure
      - ./puppet/serverdata:/opt/puppetlabs/server/data/puppetserver/
    # In some cases unqualified hostnames can have the .local suffix
    # added, I've seen this under Docker of Mac Beta for instance.
    # Due to needing to access PuppetDB on same hostame as signed in the
    # certificate you may need to uncommant the following lines
    #environment:
    #  - PUPPETDB_SERVER_URLS=https://puppetdb.local:8081
    #links:
    #  - puppetdb:puppetdb.local

  puppetdbpostgres:
    container_name: postgres
    image: puppet/puppetdb-postgres
    environment:
      - POSTGRES_PASSWORD=puppetdb
      - POSTGRES_USER=puppetdb
    expose:
      - 5432
    volumes:
      - ./puppetdb-postgres/data:/var/lib/postgresql/data/

  puppetdb:
    hostname: puppetdb
    image: puppet/puppetdb
    ports:
      - 8080:8080
      - 8081:8081
    volumes:
      - ./puppetdb/ssl:/etc/puppetlabs/puppet/ssl/

  puppetboard:
    image: puppet/puppetboard
    environment:
      - GRAPH_FACTS='architecture,puppetversion,osfamily'
      - ENABLE_CATALOG=True
    ports:
      - 8000:8000

  puppetexplorer:
    image: puppet/puppetexplorer
    ports:
      - 80:80
    read_only: true

  puppet-catalog-diff-viewer:
    image: camptocamp/puppet-catalog-diff-viewer
    ports:
      - 81:80
    volumes:
      - ./puppet-catalog-diff-viewer:/data

  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: watchtower puppet puppetdbpostgres puppetdb puppetboard puppetexplorer puppet-catalog-diff-viewer --interval 30
    restart: unless-stopped

  dockergc:
    image: clockworksoul/docker-gc-cron:latest
    container_name: docker-gc
    restart: always
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./docker-gc-exclude:/etc/docker-gc-exclude
    environment:
        # By default, docker-gc is run every night at midnight. Change this variable to override.
        - CRON=0 9,21 * * *

        # By default, docker will not remove an image if it is tagged in multiple repositories. If
        # you have a server running docker where this is the case, for example in CI environments 
        # where dockers are being built, re-tagged, and pushed, you can set this flag to 1 to override.
        - FORCE_IMAGE_REMOVAL=1

        # By default, if an error is encountered when cleaning up a container, Docker will report the
        # error back and leave it on disk. This can sometimes lead to containers accumulating. If
        # you run into this issue, you can force the removal of the container by setting this flag.
        - FORCE_CONTAINER_REMOVAL=1

        # By default, docker-gc will not remove a container if it exited less than 1 hour ago.
        # Set the GRACE_PERIOD_SECONDS variable to override this default.
        - GRACE_PERIOD_SECONDS=3600

        # By default, docker-gc will proceed with deletion of containers and images. To test your
        # settings set the DRY_RUN variable to override this default
        - DRY_RUN=0

        # By default, this process will leave any dangling volumes untouched. To instruct the
        # process to automatically clean up any dangling volumes, simply set this value to 1.
        - CLEAN_UP_VOLUMES=1
        
        # If you don't like all your log output and cron times being in UTC, you can set the
        # TZ variable to override the default.
        - TZ=America/New_York
